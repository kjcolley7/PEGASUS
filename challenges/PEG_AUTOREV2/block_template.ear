//
// CONST WIDTH={WIDTH}, HEIGHT={HEIGHT}
// PARAM VALUE={VALUE}, X_POS={X_POS}, Y_POS={Y_POS}
// PARAM RIGHT_CHAR={RIGHT_CHAR}, DOWN_CHAR={DOWN_CHAR}
//

.scope
.loc @grid + ({Y_POS} * {WIDTH}) + {X_POS}, ({WIDTH} * {HEIGHT}) - 1
.export @block_{X_POS}_{Y_POS}

@block_{X_POS}_{Y_POS}:
@.start:
	MOV     R2, {VALUE}
	MOV     R3, {X_POS}
	MOV     R4, {Y_POS}

@.read_char:
	RDB     R1
	HLT.CS
	CMP     R1, '{RIGHT_CHAR}'
	BRR.EQ  @.right
	CMP     R1, '{DOWN_CHAR}'
	BRR.EQ  @.down
	CMP     R1, '\n'
	BRR.EQ  @.read_char
	HLT
	
@.right:
	// target_x = X_POS + VALUE
	// if target_x >= WIDTH:
	//     halt
	ADD     R5, R3, R2
	CMP     R5, {WIDTH}
	HLT.GE
	
	// jump_target = @grid + Y_POS * WIDTH + target_x
	// goto *jump_target
	ADR     R1, @grid + ({Y_POS} * {WIDTH})
	ADD     PC, R1, R5
	
@.down:
	// target_y = Y_POS + VALUE
	// if target_y >= HEIGHT:
	//     halt
	ADD     R5, R4, R2
	CMP     R5, {HEIGHT}
	HLT.GE
	
	// jump_target = @grid + target_y * WIDTH + X_POS
	// goto *jump_target
	MLU     R1, R5, {WIDTH}
	ADR     R5, @grid + {X_POS}
	ADD     PC, R1, R5
	
@.end:
